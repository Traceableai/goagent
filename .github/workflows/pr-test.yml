name: test
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:
    paths-ignore:
      - "**/*.md"

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go: ["1.15", "1.16", "1.17"]
    steps:
      # Set fetch-depth: 0 to fetch commit history and tags for use in version calculation
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Download dependencies
        run: make deps

      - name: Lint files
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.42.1
          # work around for "file exists" errors.
          # See https://github.com/golangci/golangci-lint-action/issues/135#issuecomment-791775296
          skip-go-installation: true
          skip-pkg-cache: true
          only-new-issues: true

      - name: Run tests
        run: CGO_ENABLED=1 go test -coverprofile=coverage.txt -v ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: goagent-src test reports
          fail_ci_if_error: true
          files: ./coverage.txt

      - name: check examples
        run: make check-examples

  test-linux-distro:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro_version:
          - debian_10
          - debian_11
          - alpine_3.9
          - alpine_3.10
          - alpine_3.11
          - alpine_3.12
          - centos_7
          - centos_8
          - amazonlinux_2
          - ubuntu_18.04
          - ubuntu_20.04
    steps:
      # Set fetch-depth: 0 to fetch commit history and tags for use in version calculation
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      # Since we can't pass non scalar matrix values we pass two values concatenated
      # and do some parsing to get them separatedly.
      - uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: ${{ matrix.distro_version }}
          split-by: "_"

      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ steps.split.outputs._0}}

      - name: Build test images
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ./filter/traceable/cmd/libtraceable-downloader
          file: ./filter/traceable/cmd/libtraceable-downloader/Dockerfile.${{ steps.split.outputs._0}}.test
          build-args: |
            ${{ steps.string.outputs.uppercase }}_VERSION=${{ steps.split.outputs._1}}
            GO_VERSION=1.16.8
          tags: traceable_goagent_test_base:${{ matrix.distro_version }}

      - name: Run linux tests
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: ./_tests/Dockerfile.test
          build-args: |
            TRACEABLE_GOAGENT_DISTRO_VERSION=${{ matrix.distro_version }}
          tags: traceable_goagent_test:${{ matrix.distro_version }}

  test-linux-distro-no-lib:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro_version:
          - ubuntu_20.04
    steps:
      # Set fetch-depth: 0 to fetch commit history and tags for use in version calculation
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      # Since we can't pass non scalar matrix values we pass two values concatenated
      # and do some parsing to get them separatedly.
      - uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: ${{ matrix.distro_version }}
          split-by: "_"

      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ steps.split.outputs._0}}

      - name: Build test images
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ./filter/traceable/cmd/libtraceable-downloader
          file: ./filter/traceable/cmd/libtraceable-downloader/Dockerfile.${{ steps.split.outputs._0}}.test
          build-args: |
            ${{ steps.string.outputs.uppercase }}_VERSION=${{ steps.split.outputs._1}}
            GO_VERSION=1.16.8
          tags: traceable_goagent_test_base:${{ matrix.distro_version }}

      - name: Run linux tests
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: ./_tests/Dockerfile.no_lib.test
          build-args: |
            TRACEABLE_GOAGENT_DISTRO_VERSION=${{ matrix.distro_version }}
          tags: traceable_goagent_no_lib_test:${{ matrix.distro_version }}

  test-linux-distro-missing-lib:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro_version:
          - ubuntu_20.04
    steps:
      # Set fetch-depth: 0 to fetch commit history and tags for use in version calculation
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      # Since we can't pass non scalar matrix values we pass two values concatenated
      # and do some parsing to get them separatedly.
      - uses: rishabhgupta/split-by@v1
        id: split
        with:
          string: ${{ matrix.distro_version }}
          split-by: "_"

      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ steps.split.outputs._0}}

      - name: Build test images
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ./filter/traceable/cmd/libtraceable-downloader
          file: ./filter/traceable/cmd/libtraceable-downloader/Dockerfile.${{ steps.split.outputs._0}}.test
          build-args: |
            ${{ steps.string.outputs.uppercase }}_VERSION=${{ steps.split.outputs._1}}
            GO_VERSION=1.16.8
          tags: traceable_goagent_test_base:${{ matrix.distro_version }}

      - name: Run linux tests
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: ./_tests/Dockerfile.missing_lib.test
          build-args: |
            TRACEABLE_GOAGENT_DISTRO_VERSION=${{ matrix.distro_version }}
          tags: traceable_goagent_missing_lib_test:${{ matrix.distro_version }}
